1.
get the repo using the given url

git clone https://git.savannah.gnu.org/git/diffutils.git

2.
put the log in a file

cd diffutils
git log>git-log.txt

3.
put the tag in a file

git tag> git-tags.txt

4.
Find the commit entitled “maint: quote 'like this' or "like this", not `like this'”, and generate a patch for that commit, 
putting it into the file quote-patch.txt.

C+S maint: quote 'like 

and I found it


commit 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f
Author: Paul Eggert <eggert@cs.ucla.edu>
Date:   Wed Jan 25 23:46:16 2012 -0800

    maint: quote 'like this' or "like this", not `like this'

then generate a patcch

git format-patch -1 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f --stdout > quote-patch.txt
	
5.
checkout version 3.0

git checkout v3.0

6.
apply the patch
patch -p1 <quote-patch.txt

It kept asking "File to patch" and I just pressed the Enter every time
Other than that there were also a bunch of failures, at the following hunk:
README 9 60
REANDME-hacking 19
cfg.mk 29
src/diff.c 876 906 942
src/diff3.c 433

7.
check the status of the git

git status

and it prints out the following:
HEAD detached at v3.0
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   NEWS
        modified:   README
        modified:   TODO
        modified:   doc/diagmeet.note
        modified:   ms/config.bat
        modified:   ms/config.site
        modified:   po/en.po
        modified:   src/analyze.c
        modified:   src/cmp.c
        modified:   src/context.c
        modified:   src/diff.c
        modified:   src/diff.h
        modified:   src/diff3.c
        modified:   src/dir.c
        modified:   src/ifdef.c
        modified:   src/io.c
        modified:   src/sdiff.c
        modified:   src/side.c
        modified:   src/system.h
        modified:   src/util.c
        modified:   tests/help-version

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        NEWS.orig
        README-hacking.orig
        README-hacking.rej
        README.orig
        README.rej
        cfg.mk.orig
        cfg.mk.rej
        git-log.txt
        git-tags.txt
        ms/config.site.orig
        quote-patch.txt
        src/cmp.c.orig
        src/context.c.orig
        src/diff.c.orig
        src/diff.c.rej
        src/diff.h.orig
        src/diff3.c.orig
        src/diff3.c.rej
        src/dir.c.orig
        src/sdiff.c.orig
        src/system.h.orig
        src/util.c.orig
        tests/help-version.orig

no changes added to commit (use "git add" and/or "git commit -a")

8&9
Use Emacs to revert all the changes to files other than .c files

do the follwoing:
emacs 
C-x V U 
yes
C-x C-c

to the following files:
		modified:   NEWS
        modified:   README
        modified:   TODO
        modified:   doc/diagmeet.note
        modified:   ms/config.bat
        modified:   ms/config.site
        modified:   po/en.po
		modified:   src/diff.h
		modified:   src/system.h	
		modified:   tests/help-version
		
to the following c files:
in src
analyze.c 
ifdef.c
io.c 
side.c

I ran the following command to revert any changes to comment hunks:

Within each window, I used vc-diff C-x v = to open the vc-diff buffer and then C-c C-a to revert all the changes

for the other c files
I used vc-diff C-x v = to open the vc-diff buffer and then C-u C-c C-a to all the hunks with a comment section

10.
emacs src/*.c.rej

after examinating it, I go to diff.c and diff3.c and change the corresponding ` into '

11.
git clean -f
remove all the untracted files

12.
git status 

HEAD detached at v3.0
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   src/cmp.c
        modified:   src/context.c
        modified:   src/diff.c
        modified:   src/diff3.c
        modified:   src/dir.c
        modified:   src/sdiff.c
        modified:   src/side.c
        modified:   src/util.c

no changes added to commit (use "git add" and/or "git commit -a")

then build the patch 
git diff > quote-3.0-patch.txt

13.
./bootstrap
use the additional patch 
wget https://web.cs.ucla.edu/classes/fall18/cs35L/assign/diffutils-gets.diff
change the "old" in first line of the patch to lib
./bootstrap
patch -p0 <diffutils-gets.diff

./configure
make

then test if it is good
./src/diff . -
./src/diff: cannot compare '-' to a directory
 so it is good!
 
diff --help
the result is also good

14.

cd ..
mkdir diffutils-3.0-patch
mkdir clone
cd clone
git clone ~eggert/src/gnu/diffutils
git checkout v3.0 -b origin
cd ..
mkdir diffutils-3.0
cp clone/diffutils/src/*.c diffutils-3.0/
diffutils/src/diff -pru diffutils-3.0 diffutils-3.0-patch >quote-3.0-test.txt


15. 
diff quote-3.0-test.txt  diffutils/quote-3.0-patch.txt

they are not the same, but all the differences has to do with ' and `, so it is not harmful