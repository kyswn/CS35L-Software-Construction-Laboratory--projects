1.1
1. 
e m a c s SP e x e r l . h t m l
2.
C-s H T M L Enter 
3.
C-s s c a v e n g e r Enter
4.
C-s s e l f - r e f e r e n t i a l Enter
5.
C-s a r r o w Enter
6.
C-e
7.
C-a
10.
C-x C-C y

1.2
1. 
E m a c s  SP e x e r 2 . h t m l 
2.
M-x g o t o - l i n e Enter 1 8 Enter C-k
3.
C-s D E L E T E - M E Enter C-k M-0 C-k
4.
C-s < h t t p s : / / e n . w i k i Enter M-k C-x DEL
5.
C-s < ! - -  Enter C-d C-d C-d 
C-s < ! - - Enter  C-k C-k M-0 C-k 
C-s < ! - - Enter M-k
C-x C-s C-x C-c


1.3
1.
e m a c s SP e x e r 3 . h t m l

2.
M-% A s s i g n m e n t 1 Enter A s s i g n m e n t 4 2 Enter y y C-b
3.
M-% U T F - 8 Enter U S - A S C I I Enter Y C-b
4.
M-x 
R e - s e a r c h - f o w a r d Enter [^[:ascii:]]
M-0 C-k C-k C-f
5.
M-<
C-s < / o l > C-f SP
6.
C-x C-s C-x C-c
d i f f - u e x e r 1 . h t m l SP e x e r 3 . h t m l SP e x e r 3 . d i f f 

1.4
1. 
c a t e x e r 2 . h t m l SP e x e r 2 . d i f f SP > e x e r 4 . h t m l 

2.
spec says i dont need to type this one down

3.
M-> C-p C-p C-f C-@ C-e M-w M-x g o t o Enter l i n e Ener 3 9 7 Enter C-y

4.
C-s < ! - Enter C-b C-b C-@ C-e M-w M-x g o t o Enter l i n e Enter 1 5 C-n C-n C-n C-y
M-> C-r < ! - - C-r Enter C-@ C-e C-n C-n C-n M-w M-x g o t o Enter l i n e Enter 3 8 5 Enter C-y
C-s <£¡C-s C-s C-s C-b C-b C-@ C-e M-w M-x g o t o Enter l i n e Enter 1 2 4 C-n C-n C-n C-y
C-s < ! - C-s C-s C-s C-s C-b C-b C-@ C-e C-n C-n M-w M-x g o t o Enter l i n e Enter 3 3 7 C-n C-n C-n C-y
M-> C-r < ! C-r C-r Enter C-b C-b C-@ C-f C-f C-f C-f M-w M-x g o t o Enter l i n e 3 8 3 Enter C-n C-n C-n C-n C-n C-b C-b C-b C-b C-b
M-< C-s <! C-s C-s C-s C-s C-s C-s C-s C-s  C-@ C-e M-w M-x g o t o Enter l i n e Enter 2  C-y

5.
M-x g o t o Enter l i n e 4 0 6 Enter C-@ M-> Backspace

6. 
C-/

7.

M-x g o t o Enter l i n e  4 0 6  Enter C-@ M-> M-x c o m m e n t - l i n e Enter

8.
M-< M-% < o l > ENTER < o L > ENTER y y y y y y y

C-x C-s C-x C-c



1.5
1.
m k d i r SP ~ / j u n k Enter

2.
c d SP ~ / j u n k Enter
t o u c h SP h e l l o . c Enter
e m a c s SP h e l l o . c Enter

then I type in the c program

3.
M-x c o m p i l e Enter 

4.
C-a C-k g c c SP - o SP c h u SP h e l l o . c SP ; SP . / c h u SP > SP h e l l o - o u t Enter
C-x C-f h e l l o - o u t Enter

5.
C-x h M-w C-y

#include <stdio.h>
int
main (void)
{
  char n = '\n', b = '\\', q = '"';
  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  char n = '%cn', b = '%c%c', q = '%c';%c  char const *p = %c%s%c;%c  printf (p, n, n, n, n, b, b, b, q, n, q, p, q, n, n, n, n);%c  return 0;%c}%c";
  printf (p, n, n, n, n, b, b, b, q, n, q, p, q, n, n, n, n);
  return 0;
}

1.6
1.
e m a c s Enter
C-x b Enter

2.
( r a n d o m SP " 4 2 4 - 5 3 5 - 7 7 6 2 " ) C-j

I get -1265709416931214833

3.
( s e t q SP x SP ( r a n d o m ) ) C-j  

i get -247851818382468866

( s e t q SP y SP ( r a n d o m ) ) C-j


I get -544357663093548678

( * SP x SP y ) C-j
I get -1739491162953074932
this is not mathematically right, because a negative number multiplied by a negative number should be positive, and also we could check the product of the last digits, and 6*8 doesn't end with 2

5.
M-x e v a l Enter e x p r e s s i o n Enter ( * SP x SP y ) Enter

I get --1739491162953074932 (#o237340540034620033414, #x27dc1600e640370c)

They are different in that the second one is followed by a weird number and a hex number 

6.
They are not, because they are generated by the same seed

7.
1 - 1/2^61 * (1 + 1/2 + 1/3 + ... + 1/2^61)

If x=2, possibility of overflow is 1/2, 
if x=3  possibility of overflow is 1/3
and we could add them up 
